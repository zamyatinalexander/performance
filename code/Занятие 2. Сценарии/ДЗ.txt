ДЗ-4: Реализовать загрузку тестовых данных из файла
Доработайте ранее созданный сценарий для создания контактов в адресной книге, чтобы он загружал тестовые данные (информацию о контактах) из внешнего файла в формате CSV.

Много тестовых данных не надо, достаточно 3-4 строчки, и все поля формы тоже не обязательно заполнять этими тестовыми данными, для некоторых можно оставить фиксированные значения.

В качестве ответа на задание приложите архив, содержащий jmx-файл со сценарием и csv-файл с тестовыми данными.



ДЗ-5: Реализовать сценарий с корреляцией запросов
Разработайте сценарий для удаления контактов из адресной книги. Сценарий должен удалять один случайно выбранный контакт. Для удаления контакта нужно сначала открыть страницу редактирования контакта и там нажать кнопку удаления.

Лучше всего этот сценарий сделать в том же самом jmx-файле, где уже находится сценарий для создания контактов.

В качестве ответа на задание приложите jmx-файл со сценарием.




ДЗ-6: Реализовать проверку в сценарии
В сценарий удаления контактов добавьте проверку того, что контакт действительно удалился.

В качестве ответа на задание приложите jmx-файл со сценарием.



ДЗ-7: Реализовать "сложные" сценарии
1. Установите баг-трекер Mantis.

2. Создайте в нём несколько аккаунтов "тестировщиков" (2-3) и несколько аккаунтов "разработчиков" (2-3), а также какой-нибудь проект. Это нужно делать, войдя в систему под учётной записью administrator, пароль root.

3. Реализуйте в JMeter сценарий создания баг-репорта "тестировщиком": вход в систему, выбор проекта, создание баг-репорта.

Данные для входа (логин, пароль) должны при этом загружаться из внешнего файла. Данные для создания баг-репорта можно либо загружать из внешнего файла, либо генерировать случайно, но они должны быть разными).

4. Реализуйте там же сценарий закрытия баг-репорта "разработчиком": вход в систему, выбор проекта, просмотр списка открытых баг-репортов, открытие какого-то случайно выбранного баг-репорта, перевод его в статус closed (ну или resolved, кому как больше нравится).

Данные для входа (логин, пароль) должны при этом загружаться из внешнего файла.

5. Так как функциональность входа в систему для "тестировщиков" и "разработчиков" одинаковая, реализуйте это как переиспользуемый модуль, в который логин и пароль передаются как параметры.

В качестве ответа на задание приложите архив, содержащий jmx-файл со сценариями и csv-файлы с тестовыми данными.